-- Loading the dataset

select * from assignment_cleaned ac ;

-------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------- Basic analysis -----------------------------------------------------

-- Unique Cities, Products and Paymentmethod the data has

select distinct city 
from assignment_cleaned ac 
-- 10 cities the data has : Ahmedabad, Bangalore, Chennai, Delhi, Hyderabad, Jaipur, Kolkata, Lucknow, Mumbai and Pune

select distinct productname  
from assignment_cleaned ac

-- 5 pdts : Apple, Laptop, Notebook, Sofa and T-Shirt

select distinct paymentmethod  
from assignment_cleaned ac

-- 4 different payment methods : Cash, Credit Card, Debit card and UPI

-- Unique Customers -- 

select count(distinct customerid) 
from assignment_cleaned ac 

-- Analysis : 48995 customers

----------------------------------------------------------------------------------------------------------------
---------------------------------------------------Product analysis---------------------------------------------

-- Most common payment method

select paymentmethod , count(paymentmethod) as cnt
from assignment_cleaned ac 
group by 1
order by 2 desc

-- Analysis : Debit Card is most common whereas Credit card is least common

-- Most selling Product

select productname , count(productname) as cnt
from assignment_cleaned ac 
group by 1
order by 2 desc

-- Analysis : Notebook is most purchased item while Sofa is least purchased

-- Quantity analysis
select max(quantity)
from assignment_latest al

select min(quantity)
from assignment_latest al

-- Analysis : Max quantity of product sold is 50 whereas lowest quantity sold is 1

-- Sales Analysis 

-- 1. Monthly Sales Trend 
SELECT 
     TO_CHAR(TO_TIMESTAMP(transactiondate, 'YYYY-MM-DD'), 'Month') AS Month_Name,
    SUM(TransactionAmount) AS TotalSales
FROM assignment_cleaned ac 
GROUP BY Month_Name
ORDER BY TotalSales desc;
-- Analysis : It shows Sales is highest in the month of January and lowest in month of December

-- Q)Product generated maximum revenue 

select productname , sum(transactionamount) as total_revenue 
from assignment_cleaned ac 
group by 1
order by 2 desc

-- Analysis : Laptop has generated maximum revenue whereas Apple has generated least revenue

-- Q) City generating maximum revenue

select city , sum(transactionamount) as total_revenue 
from assignment_cleaned ac 
group by 1
order by 2 desc

-- Kolkata has generated maximum revenue whereas Hyderabad generated the least

-- Q) Pdt with max discount on an avg :

select productname , avg(discountpercent) as avg_discount_percent 
from assignment_cleaned ac 
group by 1
order by 2 desc

-- Analysis : Almost same discount for all pdts(Max for apple : 25.03% and least for Sofa : 24.95%)

--Q) Gender count and Sales by Gender 

SELECT CustomerGender, count(*) as count_of_people, SUM(TransactionAmount) AS total_revenue
FROM assignment_cleaned ac 
GROUP BY CustomerGender;

-- Analysis : Gender is max for others category and max revenue is also generated by them

-- Q) Most common product by gender 
select customergender , productname ,count(customergender) as cnt
from assignment_cleaned ac 
group by 1,2
order by 3 desc 
-- Analysis : Notebook is much common under Others category and Laptop is least common under Female category 

-- Avg feedback score of each product :
select productname , round(avg(feedbackscore),3) as avg_feedback 
from 
assignment_cleaned ac 
group by 1
order by 2 desc

-- Analysis : Avg feedback is highest for Sofa whereas lowest feedback given for Laptop on an average

-- Q) Avg delivery time by Product

select productname , round(avg(deliverytimedays),3) as avg_delivery_days 
from assignment_cleaned ac 
group by 1
order by 2 desc

-- Analysis : Time taken to deliver sofa is max(11 days approx) whereas lowest for apple(2 days approx)


-- Q) No. of transactions made in each time of the day(Morning: 0 to 12, afternoon: 12 to 16, evening: 16 to 24) per weekday

select 
case 
	when transactiondate::time between '00:00' and '11:59' then 'Morning'
	when transactiondate::time between '12:00' and '15:59' then 'Afternoon'
	else 'Evening' end as time_of_date,
	count(*) as cnt
from assignment_cleaned ac 
group by 1

-- Analysis : Transactions made max in the morning and least during evenings

-- Q) City having good avg discount %
select city , avg(discountpercent) as avg_discount_percent 
from assignment_cleaned ac 
group by 1
order by 2 desc

-- Analysis : Max for Mumbai(25.07%) and least for Chennai(24.90%)

-- Q) Customer purchasing the most 

	select customerid, count(*)  
	from assignment_cleaned ac
	group by 1
	order by 2 desc
-- Analysis : CustomerID 35173 and 39402 with 24 purchases in the year 2022 leaving aside Unknown customerid with count of 50k transactions
	
-- Gender of most of the customers 

select customergender , count(*) as cnt 
from assignment_cleaned ac 	
group by 1
order by 2 desc

-- Analysis : Other has max count of 1.75 lakhs with least for Female customers with count of 1.59 lakhs

-- Gender distribution per city 

select city , customergender , count(*) 
from assignment_cleaned ac 
group by 1,2 
order by 3 desc

-- Analysis : In Kolkata -> Other gender has max entries of 20k whereas Other category from Chennai has least entries of 14.8k

-- Feedbackscore analysis

select feedbackscore , count(*) as feedback_count 
from assignment_cleaned ac
group by 1
order by 2 desc

-- Analysis : Feedback 4 is given for most of the transactions and least for rating 3

-------------------------------------------------- Customer insights --------------------------------------------
-- Q) Distinct customers in the data
SELECT COUNT(DISTINCT customerid) AS distinct_customers
FROM assignment_cleaned ac ;

-- Analysis : Around 48995 customers are there

-- Q)Time of Day when customers give most feedbacks

select 
case 
	when transactiondate::time between '00:00' and '11:59' then 'Morning'
	when transactiondate::time between '12:00' and '15:59' then 'Afternoon'
	else 'Evening' end as time_of_date,
	round(avg(feedbackscore),3) as avg_feedback 
from assignment_cleaned ac 
group by 1 
order by 2 desc

-- Analysis : Feedback is highest in the afternoon(3.01) and least during Mornings(2.99) 

-- Day of week has good ratings 

select TO_CHAR(TO_TIMESTAMP(transactiondate, 'YYYY-MM-DD'), 'DAY') as day_name, avg(feedbackscore) as avg_feedback  
from assignment_cleaned ac 
group by day_name
order by 2 desc

-- Analysis : Thursday has good ratings of 3.01 and Monday has worst rating of 2.99 on an average

-- Q) Help understand how much customers spend per order (Around 20392.4 per order)

select round(cast(SUM(transactionamount)/count(distinct transactionid)as numeric),2) as avg_order_value  from assignment_cleaned ac;

-- Q) Determine Sales by region/store 

select region , sum(transactionamount) as Total_Sum
from assignment_cleaned ac 
group by 1
order by 2 desc

-- Analysis : Sales in South region is the highest and lowest for West region

-- Q) Understand high value customers 

SELECT customerid , SUM(transactionamount) AS total_spent
FROM assignment_cleaned ac 
GROUP BY customerid
ORDER BY total_spent DESC;

-- Analysis : Customer ID 32460 is highest value customer with sales of 8 lakhs


-- Best and worst selling Products(By Quantity and revenue)

SELECT productname , SUM(quantity) AS total_quantity, SUM(transactionamount) AS total_revenue
FROM assignment_cleaned ac 
GROUP BY productname
ORDER BY total_quantity desc

-- Analysis : Best selling pdt by revenue is Laptop and worst selling pdt by revenue is Apple, Best selling pdt by Quantity is Apple and worst selling pdt by quantity is Sofa

-- Q) Discount impact on Sales 

SELECT discountpercent , SUM(transactionamount) AS total_revenue
FROM assignment_cleaned ac 
GROUP BY discountpercent
ORDER BY discountpercent desc

-- Analysis : Helps to analyze effectiveness of discounts(with 49.99 and 50 % discount, Transaction Amount was quite high for the products)

-- Q) Peak sales hours 

SELECT EXTRACT(HOUR FROM cast(transactiondate as timestamp)) AS sales_hour, SUM(transactionamount) AS total_revenue
FROM assignment_cleaned ac 
GROUP BY sales_hour
ORDER BY total_revenue DESC;

-- Analysis : Sales is at peak in 6th hour of the day

-- Return rate/product  

SELECT productname , COUNT(CASE WHEN returned = 'Yes' THEN 1 END) * 100.0 / COUNT(*) AS return_rate_percentage
FROM assignment_cleaned ac 
GROUP BY productname 
-- Analysis : Max for Apple(50.05 %) and min for T-Shirt(49.65 %)
-- It tells us about the refund patterns (Not much difference in return for each product)


--------  Need to see loyalty points affect spending behavior, customer engagement, and retention

SELECT 
    ROUND(AVG(loyaltypoints), 2) AS avg_loyalty_points,
    COUNT(CASE WHEN loyaltypoints BETWEEN 0 AND 3333 THEN 1 END) AS low_tier_customers,
    COUNT(CASE WHEN loyaltypoints BETWEEN 3334 AND 6666 THEN 1 END) AS mid_tier_customers,
    COUNT(CASE WHEN loyaltypoints > 6666 THEN 1 END) AS high_tier_customers
FROM assignment_cleaned ac ;

-- Analysis : Mid-Tier customers are the max

SELECT 
    CASE 
        WHEN loyaltypoints BETWEEN 0 AND 3333 THEN 'Low Tier'
        WHEN loyaltypoints BETWEEN 3334 AND 6666 THEN 'Mid Tier'
        ELSE 'High Tier'
    END AS loyalty_tier,
    COUNT(DISTINCT customerid) AS total_customers,
    COUNT(transactionid) AS total_transactions,
    ROUND(AVG(transactionamount::numeric), 2) AS avg_transaction_amount,
    SUM(transactionamount) AS total_spent
FROM assignment_cleaned ac 
GROUP BY loyalty_tier
ORDER BY total_spent DESC;

-- Customers in Mid tier are more engaged on the basis of Transactions and avg transaction amount

--Q) Top 10 customers based on loyalty points 

select customerid , avg(loyaltypoints) as avg_loyalty_points 
from assignment_cleaned ac 
group by 1
order by 2 desc 
limit 10

-- Analysis : Max for Customer ID 30188 with loyalty points of 9621.5

-- Q) Total & Average Transaction Amounts Over Time

SELECT 
    DATE(transactiondate) AS transaction_day,  
    COUNT(transactionid) AS total_transactions,  
    SUM(transactionamount) AS total_revenue,  
    ROUND(AVG(transactionamount::numeric), 2) AS avg_transaction_value
FROM assignment_cleaned ac 
GROUP BY transaction_day
ORDER BY total_revenue , avg_transaction_value ;
--  Analysis : Total revenue is max on 2022-09-01 and minimum on 2022-12-14

-- Q) Volume & Value of Transactions by Payment Method 
SELECT 
    paymentmethod ,  
    COUNT(transactionid) AS transaction_count,  
    SUM(transactionamount) AS total_transaction_value,  
    ROUND(AVG(transactionamount::numeric), 2) AS avg_transaction_value
FROM assignment_cleaned ac 
GROUP BY paymentmethod 
ORDER BY total_transaction_value DESC;

-- Debit card is popular payment method wrt Total Transaction value

-- Quantity purchased per transaction

SELECT 
    transactionid ,  
    SUM(quantity) AS total_items_purchased
FROM assignment_cleaned ac 
GROUP BY transactionid 
ORDER BY total_items_purchased DESC;

-- Max qty is 50 per transaction

-- Q) Impact of discount on Sales and Transaction frequency

SELECT 
    CASE 
        WHEN discountpercent  = 0 THEN 'No Discount'
        WHEN discountpercent  BETWEEN 0 AND 10 THEN 'Low Discount (1-10%)'
        WHEN discountpercent  BETWEEN 10.01 AND 30 THEN 'Medium Discount (11-30%)'
        ELSE 'High Discount (30%+)'
    END AS discount_category,  
    COUNT(transactionid) AS transaction_count,  
    SUM(transactionamount) AS total_sales,  
    ROUND(AVG(transactionamount ::numeric), 2) AS avg_transaction_value
FROM assignment_cleaned ac 
GROUP BY discount_category
ORDER BY total_sales DESC;

-- So for Medium and High discount Sales, avg sales is high (Higher discounts lead to more purchases & higher revenue)

select customerid , count(transactionid) as cnt 
from assignment_cleaned ac 
group by 1
order by 2 desc

SELECT 
    customerid ,
    COUNT(transactionid) AS total_transactions,
    CASE 
       WHEN COUNT(transactionid) >= 20 THEN 'Very Frequent Buyer'
       WHEN COUNT(transactionid) BETWEEN 10 AND 19 THEN 'Frequent Buyer'
       WHEN COUNT(transactionid) BETWEEN 5 AND 9 THEN 'Occasional Buyer'
        ELSE 'Rare Buyer'
    END AS customer_segment
FROM assignment_cleaned ac 
GROUP BY customerid 
order by total_transactions desc

-------------------------------- Analyze Shipping and Delivery - basing on region, pdt type and payment method

SELECT 
    region ,  
    ROUND(AVG(shippingcost::numeric), 2) AS avg_shipping_cost,  
    COUNT(transactionid) AS total_transactions
FROM assignment_cleaned ac 
GROUP BY region
ORDER BY avg_shipping_cost DESC;

--Anslysis : Most expensive shipping location is in North : less transactions and more shipping cost 

-- Q) Avg shipping cost by Product 

SELECT 
    productname ,  
    ROUND(AVG(shippingcost::numeric), 2) AS avg_shipping_cost,
    COUNT(transactionid) AS total_transactions
from assignment_cleaned ac 
GROUP BY productname 
ORDER BY avg_shipping_cost DESC;

-- Analysis : Sofa has highest shipping cost in an average.

-- Q)Average Shipping Cost by Payment Method

SELECT 
    paymentmethod ,  
    ROUND(AVG(shippingcost ::numeric), 2) AS avg_shipping_cost,  
    COUNT(transactionid) AS total_transactions
FROM assignment_cleaned ac 
GROUP BY paymentmethod 
ORDER BY avg_shipping_cost DESC;

-- Analysis : Payment methods like Cash and Credit card lead to higher shipping costs and Debit card payment method leads to lower shipping cost 

-- Q) Delivery Delays by Region

SELECT 
    region,  
    COUNT(transactionid) AS total_transactions,  
    ROUND(AVG(deliverytimedays), 2) AS avg_delay_days
FROM assignment_cleaned ac 
GROUP BY region
ORDER BY avg_delay_days DESC;

--Analysis : Transactions are highest in East region where delay is quite common with avg delay of 5.7 days

-- Q) Delivery delays by Product

SELECT 
    productname ,  
    COUNT(transactionid) AS total_transactions,  
    ROUND(AVG(deliverytimedays), 2) AS avg_delay_days
FROM assignment_cleaned ac 
GROUP BY productname
ORDER BY avg_delay_days DESC;

-- Analysis : Sofa product tends to arrive quite late on an average of 11 days

-------------------------------------------------- Customer insights --------------------------------------------
-- Distinct customers
SELECT COUNT(DISTINCT customerid) AS distinct_customers
FROM assignment_cleaned ac ;

-- No of new customers vs no of repeat customers each month on an average
WITH first_purchase AS (
    SELECT 
        customerid, 
        MIN(DATE_TRUNC('month', transactiondate::TIMESTAMP)) AS first_purchase_month
    FROM assignment_cleaned 
    GROUP BY customerid
),
customer_activity AS (
    SELECT 
        DISTINCT t.customerid,  -- Ensure only unique customers are counted
        DATE_TRUNC('month', t.transactiondate::TIMESTAMP) AS transaction_month,
        CASE 
            WHEN f.first_purchase_month = DATE_TRUNC('month', t.transactiondate::TIMESTAMP) 
            THEN 'New Customer' 
            ELSE 'Repeat Customer' 
        END AS customer_type
    FROM assignment_cleaned t
    JOIN first_purchase f 
    ON t.customerid = f.customerid
)
SELECT 
    transaction_month,
    COUNT(DISTINCT CASE WHEN customer_type = 'New Customer' THEN customerid END) AS new_customers,
    COUNT(DISTINCT CASE WHEN customer_type = 'Repeat Customer' THEN customerid END) AS repeat_customers
FROM customer_activity
GROUP BY transaction_month
ORDER BY transaction_month;

-- Customer retention increased initially , was steady in mid part of year and then it dipped down in last month of the year(by 50%)


-- Q) Sales by Age group 

SELECT 
    CASE 
        WHEN CustomerAge BETWEEN 18 AND 25 THEN '18-25'
        WHEN CustomerAge BETWEEN 26 AND 35 THEN '26-35'
        WHEN CustomerAge BETWEEN 36 AND 45 THEN '36-45'
        WHEN CustomerAge BETWEEN 46 AND 55 THEN '46-55'
        WHEN CustomerAge BETWEEN 56 AND 65 THEN '56-65'
        ELSE '66+'
    END AS AgeGroup,
    COUNT(*) AS customer_count,
    SUM(TransactionAmount) AS total_sales
FROM assessment_dataset_original
GROUP BY AgeGroup
ORDER BY total_sales DESC;

-- Analysis : Age group varies from 18 - 75. (66+ are the max people in group with max sales for 56-65 age category)



